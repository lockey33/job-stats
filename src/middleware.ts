import { NextResponse } from 'next/server'

export function middleware() {
  const res = NextResponse.next()

  // Security headers (balanced for dev/prod)
  const isDev = process.env.NODE_ENV !== 'production'

  const cspParts = [
    "default-src 'self'",
    // Allow inline styles generated by CSS-in-JS and Next fonts
    "style-src 'self' 'unsafe-inline'",
    // During development, Next uses eval for HMR; allow it only in dev
    `script-src 'self'${isDev ? " 'unsafe-eval' 'unsafe-inline'" : ''}`,
    // Images may be data URLs (OG, charts tooltips) and same-origin
    "img-src 'self' data: blob:",
    // Fonts may be inlined via data: URLs
    "font-src 'self' data:",
    // Disallow all connections except same-origin (adjust if calling external APIs from client)
    "connect-src 'self'",
    // No framing
    "frame-ancestors 'none'",
  ]
  const csp = cspParts.join('; ')

  res.headers.set('Content-Security-Policy', csp)
  res.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')
  res.headers.set('X-Frame-Options', 'DENY')
  res.headers.set('X-Content-Type-Options', 'nosniff')
  res.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()')
  // Only meaningful on HTTPS; harmless locally
  res.headers.set('Strict-Transport-Security', 'max-age=63072000; includeSubDomains; preload')

  return res
}

export const config = {
  // Apply to all routes except Next internals and static assets for performance
  matcher: ['/((?!_next/static|_next/image|favicon.ico).*)'],
}
